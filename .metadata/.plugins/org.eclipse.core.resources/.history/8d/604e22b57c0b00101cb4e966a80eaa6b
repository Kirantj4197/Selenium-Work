package frame.TestBase;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.time.Duration;
import java.util.Map;
import java.util.Properties;

import org.apache.commons.io.FileUtils;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.Platform;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.edge.EdgeDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.testng.annotations.AfterClass;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Parameters;

import com.fasterxml.jackson.databind.ObjectMapper;

import io.github.bonigarcia.wdm.WebDriverManager;

public class BaseClass {

	
	public Properties pr;
	public static WebDriver driver;
	
	@Parameters("browser")
	@BeforeClass
	public void setUp(String browser) throws IOException
	{
		
		
		FileReader fr=new FileReader("./src/test/resources/Global.properties");
		pr=new Properties();
		pr.load(fr);
		
		
		if(pr.getProperty("execution_environment").equalsIgnoreCase("remote"))
		{
			DesiredCapabilities cap=new DesiredCapabilities();
			cap.setPlatform(Platform.LINUX);
			cap.setBrowserName(browser);	
		
	}
		
		
		else
		{
			
			switch(browser.toLowerCase())
			{
			 
			case "chrome" :  WebDriverManager.chromedriver().setup();
			                  driver=new ChromeDriver(); 
			                  break;
			case "edge" :  WebDriverManager.edgedriver().setup();
			               driver=new EdgeDriver(); 
			               break;
			default: System.out.println("invalid browser"); return;
			}
		}
		
		driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));
		driver.manage().window().maximize();
}
	
	@AfterClass
	public void tearDown()
	{
		driver.quit();
	}

	 public static Map<String, Object> getTestData(String filePath) throws IOException {
	        ObjectMapper objectMapper = new ObjectMapper();
	        return objectMapper.readValue(new File(filePath), Map.class); // Convert JSON to Map
	    }
	 
	 
		public String getScreenshot(String testCaseName,WebDriver driver) throws IOException
		{
			TakesScreenshot ts = (TakesScreenshot)driver;
			File source = ts.getScreenshotAs(OutputType.FILE);
			File file = new File(System.getProperty("user.dir") + "//reports//" + testCaseName + ".png");
			FileUtils.copyFile(source, file);
			return System.getProperty("user.dir") + "//reports//" + testCaseName + ".png";
			
			
		}
	 

	
}